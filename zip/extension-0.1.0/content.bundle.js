(()=>{"use strict";var e;!function(e){e.connect="tlsn/cs/connect",e.run_dynamic_proof="tlsn/cs/run_dynamic_proof"}(e||(e={}));const s=new class{#e=new Map;#s=0;get id(){return this.#s++}constructor(){window.addEventListener("message",(e=>{const s=e.data;if("1.0"!==s.tlsnrpc)return;const t=this.#e.get(s.id);t&&(void 0!==s.result?(t.resolve(s.result),this.#e.delete(s.id)):void 0!==s.error&&(t.reject(s.error),this.#e.delete(s.id)))}))}async call(e,s){const t={tlsnrpc:"1.0",id:this.id,method:e,params:s},n=(()=>{let e,s;return{promise:new Promise(((t,n)=>{e=t,s=n})),resolve:e,reject:s}})();return this.#e.set(t.id,n),window.postMessage(t,"*"),n.promise}};class t{async runDynamicProof(t){const n=await s.call(e.run_dynamic_proof,{type:t});return console.log("response in content index.ts",n),n}}window.zap={connect:async()=>{if(await s.call(e.connect))return new t}}})();